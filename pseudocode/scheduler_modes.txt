#define MODE1 1
#define MODE2 2
#define MODE3 3


// globals
int sc = 0;
start = clock();
int mode = MODE1;


// this is the main controller, this will be run in loop() or whatever
void controller()
{
	while(1) {
		switch(mode) {
			case MODE1:
				scheduler_mode1();
				break;
			case MODE2:
				scheduler_mode2();
				break;
			case MODE3:
				scheduler_mode3();
				break;
		}
	}
}


int scheduler_mode1()
{
	while(1) {
		switch(sc) {
			case 0:
				task();
				break;
			case 1:
				task();
				break;
			case N1-1:
				if ( task_change_to_mode2() ) {
					mode = MODE2;
					return 0;
				}
				break;
		}
		
		sc = (sc + 1) % N1;
		end = clock();
		
		if (start > end){
			elapsed = MAX_INT - start + end;
		} else{
			elapsed = end - start;
		}
		
		if(sc_time < elapsed){
			exit();
		}
		
		sleep(sc_time - elapsed);
		start += sc_time;
	}
}


int scheduler_mode1()
{
	while(1) {
		switch(sc) {
			case 0:
				task();
				break;
			case 1:
				task();
				break;
			case N2-1:
				if ( task_change_to_mode3() ) {
					mode = MODE3;
					return 0;
				}
				break;
		}
		
		sc = (sc + 1) % N2;
		end = clock();
		
		if (start > end){
			elapsed = MAX_INT - start + end;
		} else{
			elapsed = end - start;
		}
		
		if(sc_time < elapsed){
			exit();
		}
		
		sleep(sc_time - elapsed);
		start += sc_time;
	}
}


int scheduler_mode3()
{
	while(1) {
		switch(sc) {
			case 0:
				task();
				break;
			case 1:
				task();
				break;
			case N3-1:
				if ( task_change_to_mode1() ) {
					mode = MODE1;
					return 0;
				}
				break;
		}
		
		sc = (sc + 1) % N3;
		end = clock();
		
		if (start > end){
			elapsed = MAX_INT - start + end;
		} else{
			elapsed = end - start;
		}
		
		if(sc_time < elapsed){
			exit();
		}
		
		sleep(sc_time - elapsed);
		start += sc_time;
	}
}
